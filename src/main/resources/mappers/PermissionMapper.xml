<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wse.crm.dao.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.wse.crm.vo.Permission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="module_id" jdbcType="INTEGER" property="moduleId" />
    <result column="acl_value" jdbcType="VARCHAR" property="aclValue" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, module_id, acl_value, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wse.crm.vo.Permission">
    insert into t_permission (id, role_id, module_id, 
      acl_value, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{moduleId,jdbcType=INTEGER}, 
      #{aclValue,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wse.crm.vo.Permission">
    insert into t_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="moduleId != null">
        module_id,
      </if>
      <if test="aclValue != null">
        acl_value,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null">
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="aclValue != null">
        #{aclValue,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wse.crm.vo.Permission">
    update t_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null">
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="aclValue != null">
        acl_value = #{aclValue,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wse.crm.vo.Permission">
    update t_permission
    set role_id = #{roleId,jdbcType=INTEGER},
      module_id = #{moduleId,jdbcType=INTEGER},
      acl_value = #{aclValue,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!-- 通过角色名查询所拥有的的权限 -->
  <select id="queryPermissionByRole" resultType="int">
    select
        module_id
    from
        t_permission
    where role_id = #{roleId}
  </select>

  <!-- 通过角色ID查询权限数量 -->
  <select id="queryPermissionCountByRoleId" parameterType="int" resultType="int">
    select
        count(1)
    from
        t_permission
    where
        role_id = #{roleId}
  </select>

  <!-- 通过角色ID删除权限数据 -->
  <delete id="deleteByRoleId" parameterType="int">
    delete from t_permission where role_id = #{roleId}
  </delete>

  <!-- 批量添加 -->
  <insert id="insertBatch">
    insert into
    t_permission (role_id, module_id, acl_value, create_date, update_date)
    values
    <foreach collection="list" separator="," item="per">
      (#{per.roleId},#{per.moduleId},#{per.aclValue},now(),now())
    </foreach>
  </insert>

  <!-- 据用户ID查询用户拥有的角色对应的所有权限 -->
  <select id="queryUserHasRolesHasPermissions" resultType="string" parameterType="int">

    select
        tp.acl_value
    from
        t_user_role ur
    left join
        t_permission tp
    on
        ur.role_id = tp.role_id
    where
        user_id = #{userId}
  </select>

  <!-- 通过资源ID查询对应的权限 -->
  <select id="queryPermissionByModuleId" parameterType="int" resultType="int">
    select count(1) from t_permission where module_id = #{mId}
  </select>

  <!-- 通过资源ID删除权限 -->
  <delete id="deleteByModuleId" parameterType="int">
    delete from t_permission where module_id = #{mId}
  </delete>
</mapper>